@using Bookmarks.Web.Areas.Admin.ViewModels
@using Kendo.Mvc.UI

@{
    this.ViewBag.Title = "Categories";
    const string AreaName = "Admin";
}

<h1>@this.ViewBag.Title</h1>

@(Html.Kendo().Grid<CategoryAdminViewModel>()
    .Name("CategoriesGrid")
    .Columns(columns =>
    {
        columns.Bound(col => col.Id);
        columns.Bound(col => col.Name);
        columns.Command(command => command.Edit().Text("Edit").UpdateText("Save").CancelText("Cancel"));
        columns.Command(command => command.Destroy().Text("Delete"));
    })
    .ToolBar(toolbar =>
    {
        toolbar.Create().Text("Create");
        toolbar.Custom().Text("Home").Action("Index", "Home");
    })
    .Editable(editable =>
    {
        editable.Mode(GridEditMode.PopUp);
        editable.Window(w => w.Title(ViewBag.Title));
        editable.DisplayDeleteConfirmation("Are you sure you want to delete the category?");
    })
    .Pageable(x => x.Refresh(true))
    .Sortable()
    .Filterable()
    .Reorderable(x => x.Columns(true))
    .Resizable(x => x.Columns(true))
    .DataSource(x => x.Ajax()
        .ServerOperation(true)
        .Model(model => model.Id(m => m.Id))
        .Create(create => create.Action("Create", "Categories", new { area = AreaName }))
        .Read(read => read.Action("Read", "Categories", new { area = AreaName }))
        .Update(update => update.Action("Update", "Categories", new { area = AreaName }))
        .Destroy(destroy => destroy.Action("Delete", "Categories", new { area = AreaName }))
        )

      )
